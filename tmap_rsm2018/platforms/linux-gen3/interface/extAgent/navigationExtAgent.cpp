/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp NavigationExtAgent.xml -i extagenttype.h -p NavigationExtAgent
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "navigationExtAgent.h"
#include "navigationExtAgentAdaptor.h"


//Component: 		Navigation_ExtAgent
//Service Name:		App.Core.Navigation_ExtAgent
//Service Path: 		/com/bosch/cm/ai/navigation/ext/agent
//package: 		org.bosch.cm.navigation
//Interface :  		NavigationExtAgent


static const QString serviceName = QStringLiteral("App.Core.Navigation_ExtAgent");
static const QString navigationObjectPath = QStringLiteral("/com/bosch/cm/ai/navigation/ext/agent");
/*
 * Implementation of interface class OrgBoschCmNavigationNavigationExtAgentInterface
 */


OrgBoschCmNavigationNavigationExtAgentInterface::OrgBoschCmNavigationNavigationExtAgentInterface(QObject* parent)
    : QObject(parent)
    , m_adaptor(new NavigationExtAgentAdaptor(this))
    , m_registered(false)
{
    QDBusConnection connection = QDBusConnection::sessionBus();

    if (!connection.isConnected()) {
        qDebug() << "Failed to connect to DBus";
    } else if (!connection.registerObject(navigationObjectPath, this)) {
        qDebug() << "Failed to register object path";
    }
}


OrgBoschCmNavigationNavigationExtAgentInterface::~OrgBoschCmNavigationNavigationExtAgentInterface()
{
    unregisterService();

}

void OrgBoschCmNavigationNavigationExtAgentInterface::registerService()
{
    if (!m_registered) {
        QDBusConnection connection = QDBusConnection::sessionBus();

        if (!connection.isConnected()) {
            qWarning() << "Failed to connect to DBus";
            return;
        }

        if (!connection.registerService(serviceName)) {
            qWarning() << "Failed to register service: " << serviceName << " Already taken?";
            return;
        }
        qDebug() << "Success to register service: " << serviceName ;
        m_registered = true;
    }
}

void OrgBoschCmNavigationNavigationExtAgentInterface::unregisterService()
{
    if (m_registered) {
        QDBusConnection connection = QDBusConnection::sessionBus();
        connection.unregisterService(serviceName);
        m_registered = false;
    }
}




