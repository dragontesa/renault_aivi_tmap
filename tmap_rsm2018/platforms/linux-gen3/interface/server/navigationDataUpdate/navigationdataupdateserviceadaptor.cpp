/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a navigationdataupdateserviceadaptor -i navigationdataupdateservicetype.h NavigationDataUpdateService.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "navigationdataupdateserviceadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include "navigationdataupdateservice.h"

/*
 * Implementation of adaptor class NavigationDataUpdateServiceAdaptor
 */

NavigationDataUpdateServiceAdaptor::NavigationDataUpdateServiceAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

NavigationDataUpdateServiceAdaptor::~NavigationDataUpdateServiceAdaptor()
{
    // destructor
}

NavigationDataDeleteStatusInfo NavigationDataUpdateServiceAdaptor::mapDataDeleteStatusInfo() const
{
    // get the value of property mapDataDeleteStatusInfo
    NavigationDataUpdateService* service = qobject_cast<NavigationDataUpdateService*>(parent());
    return service->navigationDataDeleteStatusInfo();
}

NavigationDataUpdateStatusInfo NavigationDataUpdateServiceAdaptor::navigationDataUpdateStatusInfo() const
{
    // get the value of property navigationDataUpdateStatusInfo
    NavigationDataUpdateService* service = qobject_cast<NavigationDataUpdateService*>(parent());
    return service->navigationDataUpdateStatusInfo();
}

uint NavigationDataUpdateServiceAdaptor::DiagPerformFullDeleteMapData()
{
    // handle method call org.bosch.cm.navigation.NavigationDataUpdateService.DiagPerformFullDeleteMapData
    NavigationDataUpdateService* service = qobject_cast<NavigationDataUpdateService*>(parent());
    uint ack = service->DiagPerformFullDeleteMapData();
    qDebug() << "navidataupdateservice. diag delete service ack -> " << ack;
    return ack;
}

uint NavigationDataUpdateServiceAdaptor::DiagPerformFullUpdateViaUSB()
{
    // handle method call org.bosch.cm.navigation.NavigationDataUpdateService.DiagPerformFullUpdateViaUSB
    NavigationDataUpdateService* service = qobject_cast<NavigationDataUpdateService*>(parent());
    uint ack = service->DiagPerformFullUpdateViaUSB();
    qDebug() << "navidataupdateservice. diag update service ack -> " << ack;
    return ack;
}
