/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c com.bosch.AutomotiveProxy.CarConfiguration -p carconfigurationinterface.h:carconfigurationinterface.cpp com.bosch.AutomotiveProxy.CarConfiguration.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CARCONFIGURATIONINTERFACE_H_1526357496
#define CARCONFIGURATIONINTERFACE_H_1526357496

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.bosch.AutomotiveProxy.CarConfiguration
 */
class comboschAutomotiveProxyCarConfiguration: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.bosch.AutomotiveProxy.CarConfiguration"; }

public:
    comboschAutomotiveProxyCarConfiguration(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~comboschAutomotiveProxyCarConfiguration();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusVariant> GetConfigurationValue(uchar key)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(key);
        return asyncCallWithArgumentList(QLatin1String("GetConfigurationValue"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace bosch {
    namespace AutomotiveProxy {
      typedef ::comboschAutomotiveProxyCarConfiguration CarConfiguration;
    }
  }
}
#endif
