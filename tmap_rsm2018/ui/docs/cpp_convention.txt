1. Naming

	1) 클래스	
	
		- Pascal case: 단어 단위로 첫번째 글자를 대문자로
		* 대문자 약자도 Pascal case 적용
			ex) QTClass => QtClass
			
	2) 메소드
	
		- 소문자로 시작, 이후 Pascal case 적용
		
	3) 멤버
	
		- 소문자 m으로 시작, 이후 Pascal case 적용
		
	4) 상수
	
		- 열거형 이름의 어미로 K 사용 권장
		
		- class 및 struct의 name space 소모 방지
			ex)
				class Color
				enum Color { red, green... } => enum ColorK			
				
		- Pascal case
			ex) enum ColorK {
				Red, LightGray
			}
			static const QString UserName = QStringLiteral("")

2. 권장 사항

	1) 코딩 일반
	
		- 객체 인자에 const 참조 사용( Effective C++ )

		- 인자를 임시변수로 사용하지 않는다( Code Complete )
			- 이해하기 어렵고 디버깅이 어려운 코드
			- 유지보수를 어렵게 하는 코드
			- 인자를 const 참조로 만들고 임시변수를 별도로 정의하여 사용한다.
			
		- 인자에 복잡한 수식을 넣지 않는다.( Code Complete )
			- 이해하기 어렵고 디버깅이 어려운 코드
			- 유지보수를 어렵게 하는 코드
			- 복잡한 수식을 변수로 분리하여 인자로 사용		
			
		- 리턴 값을 명시적으로 정의한다( Code Complete )
			- 논리 단순화

		- 복잡한 조건식을 boolean 변수로 분리한다( Code Complete )
			- 논리 단순화

		* 기타 세부사항은 Code Complete 및 Effective C++ 참조

	2) 유틸리티 클래스
	
		- XxxHelper
			- 멤버를 갖는 instance가 필요한 Singleton			
			
		- XxxUtils
			- 멤버가 없는 static 클래스


